{"uid":"f3fd975ce1f26e17","name":"test_find_transaction_id","fullName":"tests.test_parabank.Test_Para_Bank#test_find_transaction_id","historyId":"cb4ebaaf92e044086390e0c64ab3e0b8","time":{"start":1746687723106,"stop":1746687733764,"duration":10658},"status":"failed","statusMessage":"Failed: An internal error has occurred and has been logged.","statusTrace":"self = <tests.test_parabank.Test_Para_Bank object at 0x7f334d18c650>\n\n    def test_find_transaction_id(self):\n        global transaction_id, transaction_amount\n        findtransactions = FindTransactions(self.driver)\n        if transaction_id:\n>           findtransactions.find_transaction_in_multiple_ways(find_transaction_value=\"find_transaction_id\",transaction_values=transaction_id)\n\ntests/test_parabank.py:133: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Find_Transactions.py:55: in find_transaction_in_multiple_ways\n    self.verify_transaction_history_present()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.Find_Transactions.FindTransactions object at 0x7f334d1a8530>\n\n    def verify_transaction_history_present(self):\n        self.transaction_id_text = None\n        self.transaction_amount_text = None\n        with allure.step(str(\"verify_transaction_history_present\").replace(\"_\", \" \")):\n            if self.wait_until_element_is_visible(self.find_transaction_table_id):\n                with allure.step(f\"Transaction Table\"):\n                    allure.attach(self.driver.get_screenshot_as_png(), name=f\"Transaction Table\",attachment_type=allure.attachment_type.PNG)\n                if self.wait_until_element_is_visible(self.funds_transfer):\n                    self.click_on_element(self.funds_transfer)\n                    with allure.step(f\"Transaction ID and Amount\"):\n                        allure.attach(self.driver.get_screenshot_as_png(), name=f\"Transaction ID and Amount\",attachment_type=allure.attachment_type.PNG)\n                    id_text = self.get_text_from_element(self.transaction_id_text_xpath)\n                    self.transaction_id_text = re.sub(r'[^\\d.]', '', id_text)\n                    amount_text = self.get_text_from_element(self.transaction_amount_text_xpath)\n                    self.transaction_amount_text = re.sub(r'[^\\d.]', '', amount_text)\n                    with allure.step(f\"Transaction ID: {self.transaction_id_text}\"):pass\n                    with allure.step(f\"Transaction Amount: {self.transaction_amount_text}\"): pass\n            elif self.wait_until_element_is_visible(self.find_transaction_error_xpath):\n                error_text = self.get_text_from_element(self.find_transaction_error_xpath)\n                self.logger.error(f\"{error_text}\")\n                with allure.step(f\"ERROR: {error_text}\"):\n                    allure.attach(self.driver.get_screenshot_as_png(), name=f\"{error_text}\",attachment_type=allure.attachment_type.PNG)\n>                   pytest.fail(f\"{error_text}\")\nE                   Failed: An internal error has occurred and has been logged.\n\npages/Find_Transactions.py:149: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1746687652490,"stop":1746687652491,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup_and_teardown","time":{"start":1746687652491,"stop":1746687654523,"duration":2032},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"Failed: An internal error has occurred and has been logged.","statusTrace":"self = <tests.test_parabank.Test_Para_Bank object at 0x7f334d18c650>\n\n    def test_find_transaction_id(self):\n        global transaction_id, transaction_amount\n        findtransactions = FindTransactions(self.driver)\n        if transaction_id:\n>           findtransactions.find_transaction_in_multiple_ways(find_transaction_value=\"find_transaction_id\",transaction_values=transaction_id)\n\ntests/test_parabank.py:133: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Find_Transactions.py:55: in find_transaction_in_multiple_ways\n    self.verify_transaction_history_present()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.Find_Transactions.FindTransactions object at 0x7f334d1a8530>\n\n    def verify_transaction_history_present(self):\n        self.transaction_id_text = None\n        self.transaction_amount_text = None\n        with allure.step(str(\"verify_transaction_history_present\").replace(\"_\", \" \")):\n            if self.wait_until_element_is_visible(self.find_transaction_table_id):\n                with allure.step(f\"Transaction Table\"):\n                    allure.attach(self.driver.get_screenshot_as_png(), name=f\"Transaction Table\",attachment_type=allure.attachment_type.PNG)\n                if self.wait_until_element_is_visible(self.funds_transfer):\n                    self.click_on_element(self.funds_transfer)\n                    with allure.step(f\"Transaction ID and Amount\"):\n                        allure.attach(self.driver.get_screenshot_as_png(), name=f\"Transaction ID and Amount\",attachment_type=allure.attachment_type.PNG)\n                    id_text = self.get_text_from_element(self.transaction_id_text_xpath)\n                    self.transaction_id_text = re.sub(r'[^\\d.]', '', id_text)\n                    amount_text = self.get_text_from_element(self.transaction_amount_text_xpath)\n                    self.transaction_amount_text = re.sub(r'[^\\d.]', '', amount_text)\n                    with allure.step(f\"Transaction ID: {self.transaction_id_text}\"):pass\n                    with allure.step(f\"Transaction Amount: {self.transaction_amount_text}\"): pass\n            elif self.wait_until_element_is_visible(self.find_transaction_error_xpath):\n                error_text = self.get_text_from_element(self.find_transaction_error_xpath)\n                self.logger.error(f\"{error_text}\")\n                with allure.step(f\"ERROR: {error_text}\"):\n                    allure.attach(self.driver.get_screenshot_as_png(), name=f\"{error_text}\",attachment_type=allure.attachment_type.PNG)\n>                   pytest.fail(f\"{error_text}\")\nE                   Failed: An internal error has occurred and has been logged.\n\npages/Find_Transactions.py:149: Failed","steps":[{"name":"find transaction id","time":{"start":1746687723106,"stop":1746687733764,"duration":10658},"status":"failed","statusMessage":"Failed: An internal error has occurred and has been logged.\n","statusTrace":"  File \"/home/runner/work/ParaBank/ParaBank/pages/Find_Transactions.py\", line 55, in find_transaction_in_multiple_ways\n    self.verify_transaction_history_present()\n  File \"/home/runner/work/ParaBank/ParaBank/pages/Find_Transactions.py\", line 149, in verify_transaction_history_present\n    pytest.fail(f\"{error_text}\")\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"click on find transaction","time":{"start":1746687723106,"stop":1746687723213,"duration":107},"status":"passed","steps":[{"name":"Clicked element: ('link text', 'Find Transactions')","time":{"start":1746687723213,"stop":1746687723213,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true},{"name":"enter transaction id","time":{"start":1746687723213,"stop":1746687723273,"duration":60},"status":"passed","steps":[{"name":"Entered text: 16807 in element ('id', 'transactionId')","time":{"start":1746687723273,"stop":1746687723273,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true},{"name":"click on find transaction id btn","time":{"start":1746687723273,"stop":1746687723330,"duration":57},"status":"passed","steps":[{"name":"Clicked element: ('id', 'findById')","time":{"start":1746687723330,"stop":1746687723330,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true},{"name":"verify transaction history present","time":{"start":1746687723330,"stop":1746687733645,"duration":10315},"status":"failed","statusMessage":"Failed: An internal error has occurred and has been logged.\n","statusTrace":"  File \"/home/runner/work/ParaBank/ParaBank/pages/Find_Transactions.py\", line 149, in verify_transaction_history_present\n    pytest.fail(f\"{error_text}\")\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"ERROR: An internal error has occurred and has been logged.","time":{"start":1746687733556,"stop":1746687733645,"duration":89},"status":"failed","statusMessage":"Failed: An internal error has occurred and has been logged.\n","statusTrace":"  File \"/home/runner/work/ParaBank/ParaBank/pages/Find_Transactions.py\", line 149, in verify_transaction_history_present\n    pytest.fail(f\"{error_text}\")\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[{"uid":"b1cbccd1cd864b7c","name":"An internal error has occurred and has been logged.","source":"b1cbccd1cd864b7c.png","type":"image/png","size":119792}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":1,"hasContent":true},{"name":"click on find transaction","time":{"start":1746687733645,"stop":1746687733764,"duration":119},"status":"passed","steps":[{"name":"Clicked element: ('link text', 'Find Transactions')","time":{"start":1746687733764,"stop":1746687733764,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":10,"attachmentsCount":1,"hasContent":true}],"attachments":[{"uid":"df4aff8605377e0a","name":"failed_test","source":"df4aff8605377e0a.png","type":"image/png","size":140297},{"uid":"b45e2dc56db6de71","name":"log","source":"b45e2dc56db6de71.txt","type":"text/plain","size":819},{"uid":"8ecbb6df5ae57802","name":"stderr","source":"8ecbb6df5ae57802.txt","type":"text/plain","size":1046}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":11,"attachmentsCount":4,"hasContent":true},"afterStages":[{"name":"setup_and_teardown::0","time":{"start":1746687745712,"stop":1746687745799,"duration":87},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('setup_and_teardown')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_parabank"},{"name":"subSuite","value":"Test_Para_Bank"},{"name":"host","value":"fv-az1336-113"},{"name":"thread","value":"3475-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_parabank"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.usefixtures('setup_and_teardown')"]},"source":"f3fd975ce1f26e17.json","parameterValues":[]}